package model.analysis.textFormatters;

import java.util.List;

import model.analysis.DataAnalysis;
import model.analysis.ImageQuery;
import model.image.ImageEntry;
import model.location.Location;
import model.species.Species;

/**
 * The text formatter the "all pictures" file generated by DataAnalyze
 * 
 * @author David Slovikosky
 */
public class AllPicturesFormatter extends TextFormatter
{
	public AllPicturesFormatter(List<ImageEntry> images, DataAnalysis analysis)
	{
		super(images, analysis);
	}

	/**
	 * <p>
	 * All pictures is a file that contains a list of each species, location, and image file photographed
	 * 
	 * @return Returns a string representing the data in a clean form
	 */
	public String createAllPictures()
	{
		StringBuilder toReturn = new StringBuilder();

		for (Location location : analysis.getAllImageLocations())
		{
			List<ImageEntry> withLocation = new ImageQuery().locationOnly(location).query(images);
			for (Species species : analysis.getAllImageSpecies())
			{
				List<ImageEntry> withLocationSpecies = new ImageQuery().speciesOnly(species).query(withLocation);
				for (ImageEntry imageEntry : withLocationSpecies)
				{
					toReturn.append(String.format("%-28s %-28s %-28s\n", location.getName(), species.getName(), imageEntry.getFile().getName()));
				}
			}
		}

		if (toReturn.length() > 0)
			toReturn = new StringBuilder(toReturn.substring(0, toReturn.length() - 1));

		return toReturn.toString();
	}
}
